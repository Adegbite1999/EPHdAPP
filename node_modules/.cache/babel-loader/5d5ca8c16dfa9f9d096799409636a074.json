{"ast":null,"code":"var _jsxFileName = \"/home/adegbite/web3-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport abi from \"./utils/web3/abi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stakingAddress = \"0x40960D06132BBCBAA3FfA1B77d10e57C8578eF95\";\n\nfunction App() {\n  _s();\n\n  //a flag to check status of user\n  const [connected, setConnected] = useState(false);\n  const [error, setError] = useState(false); // user details i.e ETH balance && brt balance && address\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 10000000,\n    token_balance: 1000000,\n    address: \"0xf4bfaf916a68b0fC859D63a319034C0f72A88a5C\"\n  }); // Error\n\n  useEffect(() => {}, []);\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      setError('MetaMask is installed!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        connectWallet: connectWallet,\n        userInfo: userInfo,\n        connected: connected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(MyStake, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StakeHistory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zKwSE/KJTNfAOgeNE2o9maFhIQI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adegbite/web3-frontend/src/App.js"],"names":["useEffect","useState","Header","MyStake","StakeHistory","Footer","ToastContainer","toast","abi","stakingAddress","App","connected","setConnected","error","setError","userInfo","setUserInfo","eth_balance","token_balance","address","connectWallet","window","ethereum"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AACA,MAAMC,cAAc,GAAG,4CAAvB;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC,CAHa,CAKb;;AAEA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACvCgB,IAAAA,WAAW,EAAE,QAD0B;AAEvCC,IAAAA,aAAa,EAAC,OAFyB;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC,CAPa,CAab;;AACAnB,EAAAA,SAAS,CAAC,MAAK,CAEd,CAFQ,EAEP,EAFO,CAAT;;AAIF,QAAMoB,aAAa,GAAG,YAAU;AAC9B,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1CR,MAAAA,QAAQ,CAAC,wBAAD,CAAR;AACD;AACF,GAJD;;AAME,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AACA,QAAA,aAAa,EAAEM,aADf;AAEA,QAAA,QAAQ,EAAEL,QAFV;AAGA,QAAA,SAAS,EAAEJ;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAYE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3CQD,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport abi from \"./utils/web3/abi.json\";\nconst stakingAddress = \"0x40960D06132BBCBAA3FfA1B77d10e57C8578eF95\";\n\n\n\n\n\n\nfunction App() {\n  //a flag to check status of user\n  const [connected, setConnected] = useState(false)\n  const [error, setError] = useState(false)\n\n  // user details i.e ETH balance && brt balance && address\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 10000000,\n    token_balance:1000000,\n    address: \"0xf4bfaf916a68b0fC859D63a319034C0f72A88a5C\"\n  })\n\n  // Error\n  useEffect(() =>{\n\n  },[])\n  \nconst connectWallet = async() =>{\n  if (typeof window.ethereum !== 'undefined') {\n    setError('MetaMask is installed!');\n  }\n}\n\n  return (\n    <React.Fragment>\n    <ToastContainer/>\n    <div className=\"App\">\n      <Header \n      connectWallet={connectWallet}\n      userInfo={userInfo}\n      connected={connected}\n      />\n      <main className='main'>\n        <MyStake\n        />\n        <StakeHistory\n        />\n      </main>\n      <Footer />\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}