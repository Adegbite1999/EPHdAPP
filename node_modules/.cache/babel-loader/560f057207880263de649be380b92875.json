{"ast":null,"code":"var _jsxFileName = \"/home/adegbite/web3-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport abi from \"./utils/web3/abi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stakingAddress = \"0x40960D06132BBCBAA3FfA1B77d10e57C8578eF95\";\n\nfunction App() {\n  _s();\n\n  //a flag to check status of user\n  const [connected, setConnected] = useState(false); // user details i.e ETH balance && brt balance && address\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 10000000,\n    token_balance: 1000000,\n    address: \"0xf4bfaf916a68b0fC859D63a319034C0f72A88a5C\"\n  });\n\n  const connectWallet = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('MetaMask is installed!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userInfo: userInfo,\n      connected: connected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(MyStake, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StakeHistory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ttZ8eeONe0DAWx7ByAhjcI84SO0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adegbite/web3-frontend/src/App.js"],"names":["useState","Header","MyStake","StakeHistory","Footer","abi","stakingAddress","App","connected","setConnected","userInfo","setUserInfo","eth_balance","token_balance","address","connectWallet","window","ethereum","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AACA,MAAMC,cAAc,GAAG,4CAAvB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C,CAFa,CAIb;;AAEA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACvCY,IAAAA,WAAW,EAAE,QAD0B;AAEvCC,IAAAA,aAAa,EAAC,OAFyB;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC;;AAMF,QAAMC,aAAa,GAAG,YAAU;AAC9B,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF,GAJD;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AACA,MAAA,QAAQ,EAAET,QADV;AAEA,MAAA,SAAS,EAAEF;AAFX;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport abi from \"./utils/web3/abi.json\";\nconst stakingAddress = \"0x40960D06132BBCBAA3FfA1B77d10e57C8578eF95\";\n\n\n\nfunction App() {\n  //a flag to check status of user\n  const [connected, setConnected] = useState(false)\n\n  // user details i.e ETH balance && brt balance && address\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 10000000,\n    token_balance:1000000,\n    address: \"0xf4bfaf916a68b0fC859D63a319034C0f72A88a5C\"\n  })\n  \nconst connectWallet = async() =>{\n  if (typeof window.ethereum !== 'undefined') {\n    console.log('MetaMask is installed!');\n  }\n}\n\n  return (\n    <div className=\"App\">\n      <Header \n      userInfo={userInfo}\n      connected={connected}\n      />\n      <main className='main'>\n        <MyStake\n        />\n        <StakeHistory\n        />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}