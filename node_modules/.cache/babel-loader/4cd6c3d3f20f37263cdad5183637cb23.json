{"ast":null,"code":"var _jsxFileName = \"/home/adegbite/stakingEPH/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Contract, ethers, utils } from 'ethers';\nimport { formatDate } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //a flag to check status of user\n  // const [withdrawAmount, setWithdrawAmount] = useState(null)\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 0,\n    token_balance: 0,\n    address: null\n  }); // inputChange\n  // const onChangeInputHandler = ({target}) =>{\n  //   switch (target.id) {\n  //     case \"stake\":\n  //       setStakeInput(target.value)\n  //       break;\n  //       case \"withdraw\":\n  //         setWithdrawInput(target.value)\n  //         break;\n  //         case \"address\":\n  //           setAddressInput(target.value)\n  //           break;\n  //     default:\n  //       break;\n  //   }\n  // } \n\n  const connectWallet = async () => {\n    setLoading(true);\n\n    try {\n      if (!!!window.ethereum || !!!window.web3) {\n        toast.error('please connect to an ethereum enabled browser');\n        return;\n      }\n\n      const networkId = await window.ethereum.request({\n        method: \"eth_chainId\"\n      });\n\n      if (!!window.ethereum || !!window.web3) {\n        if (Number(networkId) === 4) {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          toast.success(\"wallet connected!\");\n        } else {\n          await error();\n        }\n      }\n\n      setLoading(false);\n    } catch (error) {\n      toast.error(error);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      connectWallet: connectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(MyStake, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StakeHistory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"48WsaJiJKaxtyGViXqyrDrOEdg4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adegbite/stakingEPH/src/App.js"],"names":["useEffect","useState","Header","MyStake","StakeHistory","Footer","ToastContainer","toast","Contract","ethers","utils","formatDate","App","userInfo","setUserInfo","eth_balance","token_balance","address","connectWallet","setLoading","window","ethereum","web3","error","networkId","request","method","Number","success"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA0BC,KAA1B,QAAuC,QAAvC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACb;AAEA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,aAAa,EAAC,CAFyB;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC,CALa,CAaf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMC,aAAa,GAAG,YAAU;AAC9BC,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACF,QAAI;AACF,UAAI,CAAC,CAAC,CAACC,MAAM,CAACC,QAAV,IAAsB,CAAC,CAAC,CAACD,MAAM,CAACE,IAApC,EAAyC;AACvCf,QAAAA,KAAK,CAACgB,KAAN,CAAY,+CAAZ;AACA;AACD;;AACD,YAAMC,SAAS,GAAG,MAAMJ,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAxB,CAAxB;;AACA,UAAI,CAAC,CAACN,MAAM,CAACC,QAAT,IAAqB,CAAC,CAACD,MAAM,CAACE,IAAlC,EAAwC;AACtC,YAAIK,MAAM,CAACH,SAAD,CAAN,KAAsB,CAA1B,EAA6B;AAC5B,gBAAMJ,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAxB,CAAN;AACCnB,UAAAA,KAAK,CAACqB,OAAN,CAAc,mBAAd;AACF,SAHA,MAGI;AACP,gBAAML,KAAK,EAAX;AACG;AACD;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfD,CAeE,OAAOI,KAAP,EAAc;AACdhB,MAAAA,KAAK,CAACgB,KAAN,CAAYA,KAAZ;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACA,GArBD;;AA0BE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACA,MAAA,aAAa,EAAED;AADf;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzEQN,G;;KAAAA,G;AA2ET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Contract, ethers,utils } from 'ethers';\nimport { formatDate } from \"./utils/helpers\";\n\n\n\n\n\n\n\nfunction App() {\n  //a flag to check status of user\n\n  // const [withdrawAmount, setWithdrawAmount] = useState(null)\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 0,\n    token_balance:0,\n    address: null\n  })\n\n\n\n// inputChange\n// const onChangeInputHandler = ({target}) =>{\n//   switch (target.id) {\n//     case \"stake\":\n//       setStakeInput(target.value)\n//       break;\n//       case \"withdraw\":\n//         setWithdrawInput(target.value)\n//         break;\n//         case \"address\":\n//           setAddressInput(target.value)\n//           break;\n//     default:\n//       break;\n//   }\n// } \n\n\nconst connectWallet = async() =>{\n  setLoading(true)\ntry {\n  if (!!!window.ethereum || !!!window.web3){\n    toast.error('please connect to an ethereum enabled browser')\n    return;\n  }\n  const networkId = await window.ethereum.request({method: \"eth_chainId\"})\n  if (!!window.ethereum || !!window.web3) {\n    if((Number(networkId) === 4)){\n     await window.ethereum.request({ method: 'eth_requestAccounts' }); \n      toast.success(\"wallet connected!\")\n   }else{\n await error()\n   }\n  }\n  setLoading(false)\n} catch (error) {\n  toast.error(error)\n  setLoading(false)\n}\n}\n\n\n\n\n  return (\n    <div className=\"App\">\n      <ToastContainer/>\n      <Header \n      connectWallet={connectWallet}\n      />\n      <main className='main'>\n        <MyStake\n        />\n        <StakeHistory\n        />\n      </main>\n      <Footer />\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}