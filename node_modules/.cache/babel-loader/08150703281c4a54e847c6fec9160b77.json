{"ast":null,"code":"var _jsxFileName = \"/home/adegbite/stakingEPH/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Contract, ethers, utils } from 'ethers';\nimport { formatDate } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 0,\n    token_balance: 0,\n    address: null\n  }); // eager connect: an handler to eagerly connec user and fetch their data\n  // const eagerConnect = async () =>{\n  //   const networkId = await window.ethereum.request({method: \"eth_chainId\"})\n  //   if(Number(networkId) !== 4) return;\n  //   const provider = new ethers.providers.Web3Provider(window.ethereum)\n  //   const accounts = await provider.listAccounts();\n  //   if(!accounts.length)return;\n  //   const accountDetails = await getAccountDetails(accounts[0])\n  //   setUserInfo({\n  //     eth_balance:accountDetails.userEthBal,\n  //     token_balance:accountDetails.userBRTBalance,\n  //     address: accounts[0]\n  //   })\n  // setConnected(true)\n  // }\n  // const error = async() => {\n  // const networkId = await window.ethereum.request({method:\"eth_chainId\"})\n  // if(Number(networkId) !== 4) toast.error(\"please connect to rinkeby network\")\n  // }\n  // inputChange\n  // const onChangeInputHandler = ({target}) =>{\n  //   switch (target.id) {\n  //     case \"stake\":\n  //       setStakeInput(target.value)\n  //       break;\n  //       case \"withdraw\":\n  //         setWithdrawInput(target.value)\n  //         break;\n  //         case \"address\":\n  //           setAddressInput(target.value)\n  //           break;\n  //     default:\n  //       break;\n  //   }\n  // } \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(MyStake, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StakeHistory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"48WsaJiJKaxtyGViXqyrDrOEdg4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adegbite/stakingEPH/src/App.js"],"names":["useEffect","useState","Header","MyStake","StakeHistory","Footer","ToastContainer","toast","Contract","ethers","utils","formatDate","App","userInfo","setUserInfo","eth_balance","token_balance","address"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA0BC,KAA1B,QAAuC,QAAvC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;AAQA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,aAAa,EAAC,CAFyB;AAGvCC,IAAAA,OAAO,EAAE;AAH8B,GAAD,CAAxC,CAFa,CASf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApEQL,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport Header from './components/header/Header';\nimport MyStake from './components/MyStake/MyStake';\nimport StakeHistory from './components/StakeHistory/StakeHistory';\nimport Footer from './components/Footer/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Contract, ethers,utils } from 'ethers';\nimport { formatDate } from \"./utils/helpers\";\n\n\n\n\n\n\n\nfunction App() {\n\n  const [userInfo, setUserInfo] = useState({\n    eth_balance: 0,\n    token_balance:0,\n    address: null\n  })\n\n\n// eager connect: an handler to eagerly connec user and fetch their data\n\n// const eagerConnect = async () =>{\n//   const networkId = await window.ethereum.request({method: \"eth_chainId\"})\n//   if(Number(networkId) !== 4) return;\n//   const provider = new ethers.providers.Web3Provider(window.ethereum)\n//   const accounts = await provider.listAccounts();\n//   if(!accounts.length)return;\n//   const accountDetails = await getAccountDetails(accounts[0])\n//   setUserInfo({\n//     eth_balance:accountDetails.userEthBal,\n//     token_balance:accountDetails.userBRTBalance,\n//     address: accounts[0]\n//   })\n// setConnected(true)\n// }\n// const error = async() => {\n// const networkId = await window.ethereum.request({method:\"eth_chainId\"})\n// if(Number(networkId) !== 4) toast.error(\"please connect to rinkeby network\")\n// }\n\n\n\n// inputChange\n// const onChangeInputHandler = ({target}) =>{\n//   switch (target.id) {\n//     case \"stake\":\n//       setStakeInput(target.value)\n//       break;\n//       case \"withdraw\":\n//         setWithdrawInput(target.value)\n//         break;\n//         case \"address\":\n//           setAddressInput(target.value)\n//           break;\n//     default:\n//       break;\n//   }\n// } \n\n\n\n\n\n  return (\n    <div className=\"App\">\n      {/* <ToastContainer/> */}\n      <Header \n      />\n      <main className='main'>\n        <MyStake\n        />\n        <StakeHistory\n        />\n      </main>\n      {/* <Footer /> */}\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}